version: 0.2

env:
  variables:
    SONAR_HOST_URL: "https://sonarcloud.io"   # or your SonarQube server
    SONAR_PROJECT_KEY: "your-project-key"
    SONAR_ORG: "your-org"
    SONAR_TOKEN: "your-sonar-token"   # best: use CodeBuild Secrets Manager

phases:
  install:
    runtime-versions:
      java: corretto11
      docker: 20
    commands:
      - echo "Installing Maven..."
      - mvn --version

  pre_build:
    commands:
      - echo "Running Unit Tests..."
      - mvn clean test
      - echo "Running SonarQube Scan..."
      - mvn sonar:sonar -Dsonar.projectKey=$SONAR_PROJECT_KEY \
                        -Dsonar.organization=$SONAR_ORG \
                        -Dsonar.host.url=$SONAR_HOST_URL \
                        -Dsonar.login=$SONAR_TOKEN

  build:
    commands:
      - echo "Building Spring Boot JAR..."
      - mvn clean package -DskipTests
      - echo "Building Docker Image..."
      - docker build -t $ACCOUNT_ID.dkr.ecr.$AWS_DEFAULT_REGION.amazonaws.com/springboot-app:$CODEBUILD_RESOLVED_SOURCE_VERSION .
      - echo "Logging in to Amazon ECR..."
      - aws ecr get-login-password --region $AWS_DEFAULT_REGION | docker login --username AWS --password-stdin $ACCOUNT_ID.dkr.ecr.$AWS_DEFAULT_REGION.amazonaws.com

  post_build:
    commands:
      - echo "Pushing Docker Image to ECR..."
      - docker push $ACCOUNT_ID.dkr.ecr.$AWS_DEFAULT_REGION.amazonaws.com/springboot-app:$CODEBUILD_RESOLVED_SOURCE_VERSION
      - echo "Updating kubeconfig for EKS..."
      - aws eks update-kubeconfig --region $AWS_DEFAULT_REGION --name my-eks-cluster
      - echo "Deploying new image to EKS..."
      - kubectl set image deployment/springboot-deployment springboot-app=$ACCOUNT_ID.dkr.ecr.$AWS_DEFAULT_REGION.amazonaws.com/springboot-app:$CODEBUILD_RESOLVED_SOURCE_VERSION
      - kubectl rollout status deployment/springboot-deployment
